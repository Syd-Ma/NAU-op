{
  "name": "university-app",
  "version": "1.0.0",
  "main": "dist/index.js",
  "scripts": {
    "build": "tsc",
    "start": "node dist/index.js",
    "dev": "ts-node src/index.ts",
    "init:project": "mkdir -p src/models && echo \"import { ConsoleMenu } from './ConsoleMenu';\n\nConsoleMenu.run();\" > src/index.ts && echo \"export interface IPerson {\\n    firstName: string;\\n    lastName: string;\\n    id: string;\\n    ability(): void;\\n}\\n\\nexport interface IStudent extends IPerson {\\n    course: number;\\n    studentId: string;\\n    gender: string;\\n    grade: number;\\n}\\n\" > src/interfaces.ts && echo \"import { IStudent } from '../interfaces';\\n\\nexport class Student implements IStudent {\\n    constructor(\\n        public firstName: string,\\n        public lastName: string,\\n        public id: string,\\n        public studentId: string,\\n        public course: number,\\n        public gender: string,\\n        public grade: number\\n    ) {}\\n\\n    ability(): void {\\n        console.log(`${this.firstName} ${this.lastName} is studying.`);\\n    }\\n\\n    isExcellent(): boolean {\\n        return this.grade >= 90 && this.gender.toLowerCase() === 'female' && this.course === 5;\\n    }\\n}\\n\" > src/models/Student.ts && echo \"import { IPerson } from '../interfaces';\\n\\nexport class Dentist implements IPerson {\\n    constructor(\\n        public firstName: string,\\n        public lastName: string,\\n        public id: string\\n    ) {}\\n\\n    ability(): void {\\n        console.log(`${this.firstName} ${this.lastName} is treating teeth.`);\\n    }\\n}\\n\" > src/models/Dentist.ts && echo \"import { IPerson } from '../interfaces';\\n\\nexport class Storyteller implements IPerson {\\n    constructor(\\n        public firstName: string,\\n        public lastName: string,\\n        public id: string\\n    ) {}\\n\\n    ability(): void {\\n        console.log(`${this.firstName} ${this.lastName} is telling a story.`);\\n    }\\n}\\n\" > src/models/Storyteller.ts && echo \"import * as fs from 'fs';\\nimport { Student } from './models/Student';\\n\\nexport class FileService {\\n    static saveToFile(filename: string, data: string): void {\\n        fs.writeFileSync(filename, data, 'utf-8');\\n    }\\n\\n    static readFromFile(filename: string): string {\\n        return fs.existsSync(filename) ? fs.readFileSync(filename, 'utf-8') : '';\\n    }\\n\\n    static saveStudents(students: Student[], filename: string): void {\\n        const content = students.map(s =>\\n            `Student ${s.firstName}${s.lastName}\\n{ \\\"firstname\\\": \\\"${s.firstName}\\\", \\\"lastname\\\": \\\"${s.lastName}\\\", \\\"studentId\\\": \\\"${s.studentId}\\\", \\\"course\\\": \\\"${s.course}\\\", \\\"gender\\\": \\\"${s.gender}\\\", \\\"grade\\\": \\\"${s.grade}\\\", \\\"id\\\": \\\"${s.id}\\\" };\\n`\\n        ).join('\\n');\\n        this.saveToFile(filename, content);\\n    }\\n\\n    static loadStudents(filename: string): Student[] {\\n        const content = this.readFromFile(filename);\\n        if (!content) return [];\\n\\n        const lines = content.split('\\n').filter(l => l.includes('{'));\\n        return lines.map(line => {\\n            const json = line.substring(line.indexOf('{'), line.lastIndexOf('}') + 1);\\n            const obj = JSON.parse(json);\\n            return new Student(obj.firstname, obj.lastname, obj.id, obj.studentId, Number(obj.course), obj.gender, Number(obj.grade));\\n        });\\n    }\\n}\\n\" > src/FileService.ts && echo \"import { Student } from './models/Student';\\nimport { Dentist } from './models/Dentist';\\nimport { Storyteller } from './models/Storyteller';\\nimport { FileService } from './FileService';\\n\\nexport class ConsoleMenu {\\n    static run(): void {\\n        const students: Student[] = [\\n            new Student('Anna', 'Koval', 'ID001', 'KB123456', 5, 'female', 95),\\n            new Student('Maria', 'Shevchenko', 'ID002', 'KB654321', 5, 'female', 91),\\n            new Student('Ivan', 'Petrov', 'ID003', 'KB987654', 4, 'male', 88)\\n        ];\\n\\n        const dentist = new Dentist('Oleh', 'Bondar', 'D001');\\n        const storyteller = new Storyteller('Sofiia', 'Melnuk', 'S001');\\n\\n        FileService.saveStudents(students, 'students.txt');\\n\\n        const loaded = FileService.loadStudents('students.txt');\\n\\n        console.log('📚 Усі студенти:');\\n        loaded.forEach(s => console.log(`${s.firstName} ${s.lastName}, курс: ${s.course}, середній бал: ${s.grade}`));\\n\\n        console.log('\\n🎓 Відмінниці 5-го курсу:');\\n        loaded.filter(s => s.isExcellent()).forEach(s => console.log(`${s.firstName} ${s.lastName}`));\\n\\n        console.log('\\n👨‍⚕️ Додаткові сутності:');\\n        dentist.ability();\\n        storyteller.ability();\\n    }\\n}\\n\" > src/ConsoleMenu.ts"
  },
  "dependencies": {},
  "devDependencies": {
    "@types/node": "^20.11.30",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3"
  }
}
